@online{CWE-doc,
  author  = {CWE Team},
  title   = {Common weakness enumeration: A community-developed dictionary of software weakness types},
  year    = 2022,
  url     = {http://cwe.mitre.org/documents/schema/index.html},
  urldate = {2022-04-28},
  langid  = {english}
}

@online{Juliet,
  author  = {NSA Center for Assured Software},
  title   = {Juliet Test Suite},
  year    = 2022,
  url     = {https://samate.nist.gov/SARD/test-suites/112},
  urldate = {2022-04-28},
  langid  = {endlish}
}

@article{Shedko2020ApplyingPM,
  title   = {Applying probabilistic models to C++ code on an industrial scale},
  author  = {Andrey Y. Shedko and I. A. Palachev and Andrey N. Kvochko and Aleksandr Semenov and Kwangwon Sun},
  journal = {Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering Workshops},
  year    = {2020}
}

@article{test-suites-for-dataset,
  author = {Flynn, Lori and Snavely, William and Kurtz, Zachary},
  year   = {2021},
  month  = {05},
  pages  = {},
  title  = {Test Suites as a Source of Training Data for Static Analysis Alert Classifiers}
}

@article{assesing-validity-of-sa-warnings-cisco,
  author = {Tanwar, Anshul and Manikandan, Hariharan and Sundaresan, Krishna and Ganesan, Prasanna and Chandrasekaran, Sathish Kumar and Ravi, Sriram},
  year   = {2021},
  month  = {04},
  pages  = {},
  title  = {Assessing Validity of Static Analysis Warnings using Ensemble Learning}
}

@article{deep-bugs,
  author     = {Pradel, Michael and Sen, Koushik},
  title      = {DeepBugs: A Learning Approach to Name-Based Bug Detection},
  year       = {2018},
  issue_date = {November 2018},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {2},
  number     = {OOPSLA},
  url        = {https://doi.org/10.1145/3276517},
  doi        = {10.1145/3276517},
  journal    = {Proc. ACM Program. Lang.},
  month      = {oct},
  articleno  = {147},
  numpages   = {25},
  keywords   = {Natural language, Bug detection, JavaScript, Name-based program analysis, Machine learning}
}

@online{GCC-SA,
  author    = {David Malcolm},
  title     = {Static analysis in GCC 10},
  publisher = {Red Hat Developer},
  year      = 2022,
  url       = {https://gcc.gnu.org/wiki/DavidMalcolm/StaticAnalyzer},
  urldate   = {2022-04-28},
  langid    = {english}
}

@online{CCSM,
  author  = {bright-tools},
  title   = {CCSM repository},
  year    = 2022,
  url     = {https://github.com/bright-tools/ccsm},
  urldate = {2022-04-28},
  langid  = {english}
}

@online{Clang-SA,
  author  = {Clang},
  title   = {Clang Static Analyzer documentation},
  year    = 2022,
  url     = {https://clang-analyzer.llvm.org/},
  urldate = {2022-04-28},
  langid  = {english}
}

@online{CppCheck-SA,
  title   = {cppcheck static source code analysis tool for C and C++ code},
  author  = {Cppcheck Team},
  year    = 2022,
  url     = {http://cppcheck.net/},
  urldate = {2022-05-21},
  langid  = {english}
}

@article{classification-models-multiple-SA-tools,
  author = {Flynn, Lori and Snavely, William and Svoboda, David and VanHoudnos, Nathan and Qin, Richard and Burns, Jennifer and Zubrow, David and Stoddard, Robert and Marce-Santurio, Guillermo},
  year   = {2018},
  month  = {05},
  title  = {Prioritizing alerts from multiple static analysis tools, using classification models},
  doi    = {10.1145/3194095.3194100}
}

[9]
@article{Delaitre2013OfMS,
  title   = {Of Massive Static Analysis Data},
  author  = {Aur{\'e}lien Delaitre and Vadim Okun and Elizabeth N. Fong},
  journal = {2013 IEEE Seventh International Conference on Software Security and Reliability Companion},
  year    = {2013},
  pages   = {163-167}
}

@conference{3291,
  author    = {Aurelien Delaitre and Bertrand Stivalet and Elizabeth Fong and Vadim Okun},
  title     = {Evaluating Bug Finders: Test and Measurement of Static Code Analyzers},
  year      = {2015},
  month     = {2015-05-23},
  publisher = {Complex FaUlts and Failures in LargE Software Systems (COUFLESS), Firenze, -1},
  url       = {https://tsapps.nist.gov/publication/get_pdf.cfm?pub_id=918370},
  language  = {en}
}

[6]
@article{Bessey2010AFB,
  title   = {A few billion lines of code later},
  author  = {Al Bessey and Ken Block and Benjamin Chelf and Andy Chou and Bryan Fulton and Seth Hallem and Charles-Henri Gros and Asya Kamsky and Scott McPeak and Dawson R. Engler},
  journal = {Communications of the ACM},
  year    = {2010},
  volume  = {53},
  pages   = {66 - 75}
}

[3]
@inproceedings{Ayewah2010TheGF,
  title     = {The Google FindBugs fixit},
  author    = {Nathaniel Ayewah and William W. Pugh},
  booktitle = {ISSTA '10},
  year      = {2010}
}

[27]
@inproceedings{Ruthruff2018PredictingAA,
  title  = {Predicting Accurate and Actionable Static Analysis Warnings: An Experimental Approach},
  author = {Joseph R. Ruthruff and John Penix and J. David Morgenthaler and Sebastian G. Elbaum and Gregg Rothermel},
  year   = {2018}
}

[4]
@article{Beller2016AnalyzingTS,
  title   = {Analyzing the State of Static Analysis: A Large-Scale Evaluation in Open Source Software},
  author  = {Moritz Marc Beller and Radjino Bholanath and Shane McIntosh and Andy Zaidman},
  journal = {2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)},
  year    = {2016},
  volume  = {1},
  pages   = {470-481}
}

@article{HECKMAN2011363,
  title    = {A systematic literature review of actionable alert identification techniques for automated static code analysis},
  journal  = {Information and Software Technology},
  volume   = {53},
  number   = {4},
  pages    = {363-387},
  year     = {2011},
  note     = {Special section: Software Engineering track of the 24th Annual Symposium on Applied Computing},
  issn     = {0950-5849},
  doi      = {https://doi.org/10.1016/j.infsof.2010.12.007},
  url      = {https://www.sciencedirect.com/science/article/pii/S0950584910002235},
  author   = {Sarah Heckman and Laurie Williams},
  keywords = {Automated static analysis, Systematic literature review, Actionable alert identification, Unactionable alert mitigation, Warning prioritization, Actionable alert prediction}
}

@article{Koc-et-al,
  author    = {Koc, Ugur and Saadatpanah, Parsa and Foster, Jeffrey S. and Porter, Adam A.},
  title     = {Learning a Classifier for False Positive Error Reports Emitted by Static Code Analysis Tools},
  year      = {2017},
  isbn      = {9781450350716},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3088525.3088675},
  doi       = {10.1145/3088525.3088675},
  booktitle = {Proceedings of the 1st ACM SIGPLAN International Workshop on Machine Learning and Programming Languages},
  pages     = {35â€“42},
  numpages  = {8},
  keywords  = {long short-term memories, Naive Bayes classifier, program slicing, Static code analysis},
  location  = {Barcelona, Spain},
  series    = {MAPL 2017}
}